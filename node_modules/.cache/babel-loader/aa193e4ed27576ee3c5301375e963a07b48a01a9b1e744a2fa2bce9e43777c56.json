{"ast":null,"code":"var _jsxFileName = \"/home/ajitha/Assist/React/weather-api/src/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherSearch = () => {\n  _s();\n  const [location, setLocation] = useState('');\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = 'c910ec3f3e70722b68f4406733ccac23';\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  const handleLocationSearch = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(onSuccess, onError);\n    } else {\n      alert('Your browser does not support geolocation');\n    }\n  };\n  const onSuccess = async position => {\n    try {\n      console.log(position.coords.latitude, position.coords.longitude);\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      const api = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`;\n      const response = await fetch(api);\n      const data = await response.json();\n      console.log(data);\n      // Process the weather data as needed\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  const onError = error => {\n    console.error('Error retrieving location:', error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter location\",\n      value: location,\n      onChange: e => setLocation(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLocationSearch,\n      children: \"Get Latitude/Longitude\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Weather for \", location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.main.temp, \" K\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", weatherData.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherSearch, \"p4NDT96fTTEUqrOXMxyMo+mzT6k=\");\n_c = WeatherSearch;\nexport default WeatherSearch;\nvar _c;\n$RefreshReg$(_c, \"WeatherSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","WeatherSearch","_s","location","setLocation","latitude","setLatitude","longitude","setLongitude","weatherData","setWeatherData","API_KEY","handleSearch","response","get","data","error","console","handleLocationSearch","navigator","geolocation","getCurrentPosition","onSuccess","onError","alert","position","log","coords","api","fetch","json","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","main","temp","humidity","wind","speed","weather","description","_c","$RefreshReg$"],"sources":["/home/ajitha/Assist/React/weather-api/src/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst WeatherSearch = () => {\n  const [location, setLocation] = useState('');\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = 'c910ec3f3e70722b68f4406733ccac23';\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`\n      );\n      setWeatherData(response.data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n\n  const handleLocationSearch = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(onSuccess, onError);\n    } else {\n      alert('Your browser does not support geolocation');\n    }\n  };\n\n  const onSuccess = async (position) => {\n    try {\n      console.log(position.coords.latitude, position.coords.longitude);\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      const api = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`;\n      const response = await fetch(api);\n      const data = await response.json();\n      console.log(data);\n      // Process the weather data as needed\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n\n  const onError = (error) => {\n    console.error('Error retrieving location:', error);\n  };\n\n\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Enter location\"\n        value={location}\n        onChange={(e) => setLocation(e.target.value)}\n      />\n      <button onClick={handleLocationSearch}>Get Latitude/Longitude</button>\n      <button onClick={handleSearch}>Search</button>\n\n      {weatherData && (\n        <div>\n          <h2>Weather for {location}</h2>\n          <p>Temperature: {weatherData.main.temp} K</p>\n          <p>Humidity: {weatherData.main.humidity}%</p>\n          <p>Wind Speed: {weatherData.wind.speed} m/s</p>\n          <p>Description: {weatherData.weather[0].description}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WeatherSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}