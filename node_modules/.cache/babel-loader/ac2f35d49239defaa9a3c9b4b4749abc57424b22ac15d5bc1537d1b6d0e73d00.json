{"ast":null,"code":"import React, { useState } from 'react';\nimport axios from 'axios';\nconst WeatherSearch = async (location, apiKey) => {\n  const geocodeUrl = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(location)}&key=${apiKey}`;\n  try {\n    const response = await axios.get(geocodeUrl);\n    const {\n      results\n    } = response.data;\n    if (results.length > 0) {\n      const {\n        lat,\n        lng\n      } = results[0].geometry.location;\n      console.log('Latitude:', lat);\n      console.log('Longitude:', lng);\n      // Use latitude and longitude as needed\n    } else {\n      console.error('Location not found');\n    }\n  } catch (error) {\n    console.error('Error fetching location data:', error);\n  }\n};\n_c = WeatherSearch;\nconst location = 'Chennai'; // Replace with your searched location\nconst apiKey = 'AIzaSyBwbTOdc6sprj3m_3AM2UfOo8XMU4hzfOQ'; // Replace with your Google Geocoding API key\n\nWeatherSearch(location, apiKey);\nexport default WeatherSearch;\nvar _c;\n$RefreshReg$(_c, \"WeatherSearch\");","map":{"version":3,"names":["React","useState","axios","WeatherSearch","location","apiKey","geocodeUrl","encodeURIComponent","response","get","results","data","length","lat","lng","geometry","console","log","error","_c","$RefreshReg$"],"sources":["/home/ajitha/Assist/React/weather-api/src/Search.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst WeatherSearch = async (location, apiKey) => {\n  const geocodeUrl = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(location)}&key=${apiKey}`;\n\n  try {\n    const response = await axios.get(geocodeUrl);\n    const { results } = response.data;\n\n    if (results.length > 0) {\n      const { lat, lng } = results[0].geometry.location;\n      console.log('Latitude:', lat);\n      console.log('Longitude:', lng);\n      // Use latitude and longitude as needed\n    } else {\n      console.error('Location not found');\n    }\n  } catch (error) {\n    console.error('Error fetching location data:', error);\n  }\n};\n\nconst location = 'Chennai'; // Replace with your searched location\nconst apiKey = 'AIzaSyBwbTOdc6sprj3m_3AM2UfOo8XMU4hzfOQ'; // Replace with your Google Geocoding API key\n\nWeatherSearch(location, apiKey);\n\nexport default WeatherSearch;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,KAAK;EAChD,MAAMC,UAAU,GAAI,6DAA4DC,kBAAkB,CAACH,QAAQ,CAAE,QAAOC,MAAO,EAAC;EAE5H,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACH,UAAU,CAAC;IAC5C,MAAM;MAAEI;IAAQ,CAAC,GAAGF,QAAQ,CAACG,IAAI;IAEjC,IAAID,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;MACtB,MAAM;QAAEC,GAAG;QAAEC;MAAI,CAAC,GAAGJ,OAAO,CAAC,CAAC,CAAC,CAACK,QAAQ,CAACX,QAAQ;MACjDY,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,GAAG,CAAC;MAC7BG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,GAAG,CAAC;MAC9B;IACF,CAAC,MAAM;MACLE,OAAO,CAACE,KAAK,CAAC,oBAAoB,CAAC;IACrC;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACvD;AACF,CAAC;AAACC,EAAA,GAlBIhB,aAAa;AAoBnB,MAAMC,QAAQ,GAAG,SAAS,CAAC,CAAC;AAC5B,MAAMC,MAAM,GAAG,yCAAyC,CAAC,CAAC;;AAE1DF,aAAa,CAACC,QAAQ,EAAEC,MAAM,CAAC;AAE/B,eAAeF,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}